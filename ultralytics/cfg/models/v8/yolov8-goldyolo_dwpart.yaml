# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]               #64
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]              #32
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]           #16
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]           #8
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0n head
head:
  - [[2, 4, 6, 9], 1, SimFusion_4in, []] # 10   p4
  - [-1, 1, IFM, [[64, 32]]] # 11  p4
   
  - [9, 1, Conv, [512, 1, 1]] # 12    p5
  - [[4, 6, -1], 1, SimFusion_3in, [512]] # 13   p4
  - [[-1, 11], 1, InjectionMultiSum_Auto_pool, [512, [64, 32], 0]] # 14  p4
  - [-1, 3, C2f, [512]] # 15

  - [6, 1, Conv, [256, 1, 1]] # 16   p4
  - [[2, 4, -1], 1, SimFusion_3in, [256]] # 17   p3
  - [[-1, 11], 1, InjectionMultiSum_Auto_pool, [256, [64, 32], 1]] # 18   p3
  - [-1, 3, C2f, [256]] # 19    p3

  - [[19, 15, 9], 1, PyramidPoolAgg, [352, 2]] # 20   p5/2
  - [-1, 1, TopBasicLayer, [352, [64, 128]]] # 21   p5/2

  # - [[19, 16], 1, AdvPoolFusion_DW, []] # 22 p4  根据x1 输出维度
  # - [[-1, 21], 1, InjectionMultiSum_Auto_pool, [256, [64, 128], 0]] # 23   p4 
  # - [-1, 3, C2f, [256]] # 24   p4

  # - [[-1, 12], 1, AdvPoolFusion_DW, []] # 25  p5   
  # - [[-1, 21], 1,InjectionMultiSum_Auto_pool, [512, [64, 128], 1]] # 26    p5
  # - [-1, 3, C2f, [1024]] # 27   p5

  # - [[19, 24, 27], 1, Detect, [nc]] # 28
  
  - [[15, 12], 1, AdvPoolFusion, []] # 22 p5  根据x1 输出维度
  - [[-1, 21], 1, InjectionMultiSum_Auto_pool, [512, [64, 128], 0]] # 23     
  - [-1, 3, C2f, [1024]] # 24   p5

  - [ [ 15, -1 ], 1, AdvPoolFusion_DW, [ ] ] # 25   p4
  - [ [ -1, 21 ], 1, InjectionMultiSum_Auto_pool_dw, [ 256, [ 64, 128 ], 1,0 ] ] # 26   p4
  - [ -1, 3, C2f, [ 256 ] ]  # 27   p4

  - [ [ 19, -1 ], 1, AdvPoolFusion_DW, [ ] ] # 28   p3
  - [ [ -1, 21 ], 1, InjectionMultiSum_Auto_pool_dw, [ 256, [ 64, 128 ], 1,1 ] ] # 29   p3
  - [ -1, 3, C2f, [ 256 ] ]  # 30   p3
  - [[30, 27, 24], 1, Detect, [nc]] 
