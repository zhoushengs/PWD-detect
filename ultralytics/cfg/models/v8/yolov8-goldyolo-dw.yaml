# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect
nc: 2  # number of classes
ch: 3
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

## YOLOv8.0n backbone
#backbone:
#  # [from, repeats, module, args]
#  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
#  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
#  - [-1, 3, C2f, [128, True]]
#  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
#  - [-1, 6, C2f, [256, True]]
#  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
#  - [-1, 6, C2f, [512, True]]
#  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
#  - [-1, 3, C2f, [1024, True]]
#  - [-1, 1, SPPF, [1024, 5]]  # 9
backbone:
  # [from, repeats, module, args]
  #- [-1, 1, Identity, []]
  # [from, repeats, module, args]
  - [-1, 1, fasternet_t0_dw, ['fasternet_t0.pth']]  # 4
  #- [-1, 1, fasternet_t0, []]
  - [-1, 1, SPPF, [1024, 5]]  # 5

head:

  - [ [ 1, 2, 3, 5 ], 1, SimFusion_4in, [ ] ]  # 6
  - [ -1, 1, IFM, [ [ 64, 32 ] ] ] # 7
  #- [ 4, 1, Conv, [ 256, 1, 1 ] ]
  - [ [ 1, 2, 3 ], 1, SimFusion_3in_DW, [ 256 ] ] #  8
  - [ [ -1, 7 ], 1, InjectionMultiSum_Auto_pool, [ 256, [ 64, 32 ], 1 ] ] # 11 # 9
  - [ -1, 3, C2f, [ 256 ] ] # 12  #p3 # 10

  - [5, 1, Conv, [512, 1, 1]] #13 # 11
  - [ [ 10, 3, -1 ], 1, SimFusion_3in_DW, [ 512 ] ] # 14 # 12
  - [ [ -1, 7 ], 1, InjectionMultiSum_Auto_pool, [ 512, [ 64, 32 ], 0 ] ] # 15 # 13
  - [ -1, 3, C2f, [ 512 ] ] # 16 p4 # 14
  - [-1, 1, Conv, [256, 1, 1]] #17 # 15
  - [ [ 10, 15, 5 ], 1, PyramidPoolAgg, [ 352, 2 ] ] # 18 # 16
  #- [-1, 1, TopBasicLayer, [352, [64, 128]]] # 19  
  - [ -1, 1, IFM, [ [ 64, 128 ] ] ] #19 # 17

  - [ [ 15,  11], 1, AdvPoolFusion, [ ] ] # 20 # 18
  - [ [ -1, 17 ], 1, InjectionMultiSum_Auto_pool, [ 512, [ 64, 128 ], 0 ] ] # 21 # 19
  - [ -1, 3, C2f, [ 1024 ] ] # 22  n5 # 20

  - [ [ 15, 20 ], 1, AdvPoolFusion_DW, [ ] ] # 23 # 21
  - [ [ -1, 17 ], 1, InjectionMultiSum_Auto_pool_dw, [ 256, [ 64, 128 ], 0,0 ] ] # 24 # 22
  - [ -1, 3, C2f, [ 512 ] ] # 25 # 23
  - [ [ 10, -1 ], 1, AdvPoolFusion_DW, [ ] ] # 26 # 24
  - [ [ -1, 17 ], 1, InjectionMultiSum_Auto_pool_dw, [ 256, [ 64, 128 ], 0,1 ] ] # 27 # 25
  - [ -1, 3, C2f, [ 256 ] ] #28 # 26


  #- [[ 28, 25, 22 ], 1, RTDETRDecoder, [nc, 256, 200, 4, 8, 3]]
  - [ [ 26, 23, 20 ], 1, Detect, [ nc ] ] # 28

